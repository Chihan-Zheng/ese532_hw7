-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Filter_HW_compute_filter_1 is
port (
    inStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    inStream_empty_n : IN STD_LOGIC;
    inStream_read : OUT STD_LOGIC;
    outStream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    outStream_full_n : IN STD_LOGIC;
    outStream_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of Filter_HW_compute_filter_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

attribute shreg_extract : string;
    signal Filter_horizontal_HW_1_U0_ap_start : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_ap_done : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_ap_continue : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_ap_idle : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_ap_ready : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_start_out : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_start_write : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_inStream_read : STD_LOGIC;
    signal Filter_horizontal_HW_1_U0_tempStream_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Filter_horizontal_HW_1_U0_tempStream_write : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_ap_start : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_ap_done : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_ap_continue : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_ap_idle : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_ap_ready : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_tempStream_read : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_outStream_din : STD_LOGIC_VECTOR (7 downto 0);
    signal Filter_vertical_HW_1_U0_outStream_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal tempStream_full_n : STD_LOGIC;
    signal tempStream_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal tempStream_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_Filter_vertical_HW_1_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Filter_vertical_HW_1_U0_full_n : STD_LOGIC;
    signal start_for_Filter_vertical_HW_1_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_Filter_vertical_HW_1_U0_empty_n : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_start_full_n : STD_LOGIC;
    signal Filter_vertical_HW_1_U0_start_write : STD_LOGIC;

    component Filter_HW_Filter_horizontal_HW_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        inStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        inStream_empty_n : IN STD_LOGIC;
        inStream_read : OUT STD_LOGIC;
        tempStream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        tempStream_full_n : IN STD_LOGIC;
        tempStream_write : OUT STD_LOGIC );
    end component;


    component Filter_HW_Filter_vertical_HW_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tempStream_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        tempStream_empty_n : IN STD_LOGIC;
        tempStream_read : OUT STD_LOGIC;
        outStream_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        outStream_full_n : IN STD_LOGIC;
        outStream_write : OUT STD_LOGIC );
    end component;


    component Filter_HW_fifo_w8_d2_S IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component Filter_HW_start_for_Filter_vertical_HW_1_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    Filter_horizontal_HW_1_U0 : component Filter_HW_Filter_horizontal_HW_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Filter_horizontal_HW_1_U0_ap_start,
        start_full_n => start_for_Filter_vertical_HW_1_U0_full_n,
        ap_done => Filter_horizontal_HW_1_U0_ap_done,
        ap_continue => Filter_horizontal_HW_1_U0_ap_continue,
        ap_idle => Filter_horizontal_HW_1_U0_ap_idle,
        ap_ready => Filter_horizontal_HW_1_U0_ap_ready,
        start_out => Filter_horizontal_HW_1_U0_start_out,
        start_write => Filter_horizontal_HW_1_U0_start_write,
        inStream_dout => inStream_dout,
        inStream_empty_n => inStream_empty_n,
        inStream_read => Filter_horizontal_HW_1_U0_inStream_read,
        tempStream_din => Filter_horizontal_HW_1_U0_tempStream_din,
        tempStream_full_n => tempStream_full_n,
        tempStream_write => Filter_horizontal_HW_1_U0_tempStream_write);

    Filter_vertical_HW_1_U0 : component Filter_HW_Filter_vertical_HW_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => Filter_vertical_HW_1_U0_ap_start,
        ap_done => Filter_vertical_HW_1_U0_ap_done,
        ap_continue => Filter_vertical_HW_1_U0_ap_continue,
        ap_idle => Filter_vertical_HW_1_U0_ap_idle,
        ap_ready => Filter_vertical_HW_1_U0_ap_ready,
        tempStream_dout => tempStream_dout,
        tempStream_empty_n => tempStream_empty_n,
        tempStream_read => Filter_vertical_HW_1_U0_tempStream_read,
        outStream_din => Filter_vertical_HW_1_U0_outStream_din,
        outStream_full_n => outStream_full_n,
        outStream_write => Filter_vertical_HW_1_U0_outStream_write);

    tempStream_U : component Filter_HW_fifo_w8_d2_S
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => Filter_horizontal_HW_1_U0_tempStream_din,
        if_full_n => tempStream_full_n,
        if_write => Filter_horizontal_HW_1_U0_tempStream_write,
        if_dout => tempStream_dout,
        if_empty_n => tempStream_empty_n,
        if_read => Filter_vertical_HW_1_U0_tempStream_read);

    start_for_Filter_vertical_HW_1_U0_U : component Filter_HW_start_for_Filter_vertical_HW_1_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_Filter_vertical_HW_1_U0_din,
        if_full_n => start_for_Filter_vertical_HW_1_U0_full_n,
        if_write => Filter_horizontal_HW_1_U0_start_write,
        if_dout => start_for_Filter_vertical_HW_1_U0_dout,
        if_empty_n => start_for_Filter_vertical_HW_1_U0_empty_n,
        if_read => Filter_vertical_HW_1_U0_ap_ready);




    Filter_horizontal_HW_1_U0_ap_continue <= ap_const_logic_1;
    Filter_horizontal_HW_1_U0_ap_start <= ap_start;
    Filter_vertical_HW_1_U0_ap_continue <= ap_continue;
    Filter_vertical_HW_1_U0_ap_start <= start_for_Filter_vertical_HW_1_U0_empty_n;
    Filter_vertical_HW_1_U0_start_full_n <= ap_const_logic_1;
    Filter_vertical_HW_1_U0_start_write <= ap_const_logic_0;
    ap_done <= Filter_vertical_HW_1_U0_ap_done;
    ap_idle <= (Filter_vertical_HW_1_U0_ap_idle and Filter_horizontal_HW_1_U0_ap_idle);
    ap_ready <= Filter_horizontal_HW_1_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= Filter_vertical_HW_1_U0_ap_done;
    ap_sync_ready <= Filter_horizontal_HW_1_U0_ap_ready;
    inStream_read <= Filter_horizontal_HW_1_U0_inStream_read;
    outStream_din <= Filter_vertical_HW_1_U0_outStream_din;
    outStream_write <= Filter_vertical_HW_1_U0_outStream_write;
    start_for_Filter_vertical_HW_1_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
