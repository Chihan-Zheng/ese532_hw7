// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Filter_HW_Filter_vertical_HW_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        tempStream_dout,
        tempStream_empty_n,
        tempStream_read,
        outStream_din,
        outStream_full_n,
        outStream_write
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_pp0_stage0 = 8'd2;
parameter    ap_ST_fsm_state4 = 8'd4;
parameter    ap_ST_fsm_state5 = 8'd8;
parameter    ap_ST_fsm_pp1_stage0 = 8'd16;
parameter    ap_ST_fsm_state11 = 8'd32;
parameter    ap_ST_fsm_pp2_stage0 = 8'd64;
parameter    ap_ST_fsm_state14 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [7:0] tempStream_dout;
input   tempStream_empty_n;
output   tempStream_read;
output  [7:0] outStream_din;
input   outStream_full_n;
output   outStream_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tempStream_read;
reg outStream_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    tempStream_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln113_reg_691;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln134_reg_797;
reg    outStream_blk_n;
reg    ap_enable_reg_pp1_iter4;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln120_reg_724;
reg   [0:0] icmp_ln120_reg_724_pp1_iter3_reg;
reg   [11:0] indvar_flatten_reg_358;
reg   [2:0] j_reg_369;
reg   [8:0] i_reg_380;
reg   [8:0] X_reg_403;
reg   [8:0] i_1_reg_414;
wire   [11:0] add_ln113_fu_425_p2;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln113_fu_431_p2;
wire   [8:0] select_ln103_fu_443_p3;
reg   [8:0] select_ln103_reg_695;
wire   [2:0] select_ln113_fu_457_p3;
reg   [2:0] select_ln113_reg_700;
wire   [8:0] add_ln114_fu_465_p2;
wire   [0:0] icmp_ln119_fu_481_p2;
reg   [0:0] icmp_ln119_reg_710;
wire    ap_CS_fsm_state5;
wire   [8:0] Y_1_fu_487_p2;
reg   [8:0] Y_1_reg_714;
wire   [8:0] add_ln120_fu_493_p2;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_state8_pp1_stage0_iter2;
wire    ap_block_state9_pp1_stage0_iter3;
reg    ap_block_state10_pp1_stage0_iter4;
reg    ap_block_pp1_stage0_11001;
wire   [0:0] icmp_ln120_fu_499_p2;
reg   [0:0] icmp_ln120_reg_724_pp1_iter1_reg;
reg   [0:0] icmp_ln120_reg_724_pp1_iter2_reg;
wire   [63:0] zext_ln120_fu_505_p1;
reg   [63:0] zext_ln120_reg_728;
reg   [63:0] zext_ln120_reg_728_pp1_iter1_reg;
wire   [14:0] add_ln128_1_fu_624_p2;
reg   [14:0] add_ln128_1_reg_783;
wire   [0:0] icmp_ln133_fu_649_p2;
wire    ap_CS_fsm_state11;
wire   [8:0] add_ln134_fu_655_p2;
reg    ap_enable_reg_pp2_iter0;
wire    ap_block_state12_pp2_stage0_iter0;
reg    ap_block_state13_pp2_stage0_iter1;
reg    ap_block_pp2_stage0_11001;
wire   [0:0] icmp_ln134_fu_661_p2;
wire   [63:0] zext_ln134_fu_667_p1;
reg   [63:0] zext_ln134_reg_801;
reg   [8:0] Input_local_1_addr_2_reg_806;
reg   [8:0] Input_local_2_addr_2_reg_812;
reg   [8:0] Input_local_3_addr_2_reg_818;
reg   [8:0] Input_local_4_addr_2_reg_824;
reg   [8:0] Input_local_5_addr_2_reg_830;
reg   [8:0] Input_local_6_addr_2_reg_836;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg   [8:0] Input_local_0_address0;
reg    Input_local_0_ce0;
reg    Input_local_0_we0;
reg   [7:0] Input_local_0_d0;
wire   [7:0] Input_local_0_q0;
reg   [8:0] Input_local_1_address0;
reg    Input_local_1_ce0;
reg    Input_local_1_we0;
reg   [7:0] Input_local_1_d0;
wire   [7:0] Input_local_1_q0;
wire   [8:0] Input_local_1_address1;
reg    Input_local_1_ce1;
wire   [7:0] Input_local_1_q1;
reg   [8:0] Input_local_2_address0;
reg    Input_local_2_ce0;
reg    Input_local_2_we0;
reg   [7:0] Input_local_2_d0;
wire   [7:0] Input_local_2_q0;
wire   [8:0] Input_local_2_address1;
reg    Input_local_2_ce1;
wire   [7:0] Input_local_2_q1;
reg   [8:0] Input_local_3_address0;
reg    Input_local_3_ce0;
reg    Input_local_3_we0;
reg   [7:0] Input_local_3_d0;
wire   [7:0] Input_local_3_q0;
wire   [8:0] Input_local_3_address1;
reg    Input_local_3_ce1;
wire   [7:0] Input_local_3_q1;
reg   [8:0] Input_local_4_address0;
reg    Input_local_4_ce0;
reg    Input_local_4_we0;
reg   [7:0] Input_local_4_d0;
wire   [7:0] Input_local_4_q0;
wire   [8:0] Input_local_4_address1;
reg    Input_local_4_ce1;
wire   [7:0] Input_local_4_q1;
reg   [8:0] Input_local_5_address0;
reg    Input_local_5_ce0;
reg    Input_local_5_we0;
reg   [7:0] Input_local_5_d0;
wire   [7:0] Input_local_5_q0;
wire   [8:0] Input_local_5_address1;
reg    Input_local_5_ce1;
wire   [7:0] Input_local_5_q1;
reg   [8:0] Input_local_6_address0;
reg    Input_local_6_ce0;
reg    Input_local_6_we0;
wire   [7:0] Input_local_6_q0;
wire   [8:0] Input_local_6_address1;
reg    Input_local_6_ce1;
wire   [7:0] Input_local_6_q1;
reg   [2:0] ap_phi_mux_j_phi_fu_373_p4;
reg   [8:0] Y_reg_391;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state4;
wire   [63:0] i_cast_i_fu_471_p1;
reg    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln114_fu_437_p2;
wire   [2:0] add_ln113_1_fu_451_p2;
wire   [8:0] zext_ln123_fu_522_p1;
wire   [8:0] zext_ln128_1_fu_518_p1;
wire   [8:0] tmp_i_fu_530_p2;
wire   [14:0] p_shl3_i_fu_536_p3;
wire   [9:0] p_shl4_i_fu_548_p3;
wire   [15:0] p_shl3_cast_i_fu_544_p1;
wire   [15:0] p_shl4_cast_i_fu_556_p1;
wire   [8:0] zext_ln123_1_fu_526_p1;
wire   [8:0] zext_ln128_fu_514_p1;
wire   [8:0] tmp2_i_fu_566_p2;
wire   [12:0] p_shl_i_fu_576_p3;
wire   [13:0] p_shl_cast_i_fu_584_p1;
wire   [13:0] tmp2_cast125_i_fu_572_p1;
wire   [13:0] tmp3_i_fu_588_p2;
wire   [8:0] Input_local_6_load_cast_i_fu_602_p1;
wire   [8:0] Input_local_0_load_cast_i_fu_598_p1;
wire   [8:0] tmp41_i_fu_606_p2;
wire   [9:0] tmp5_i_fu_612_p3;
wire  signed [14:0] tmp3_i_cast_fu_594_p1;
wire   [14:0] zext_ln128_4_fu_620_p1;
wire  signed [15:0] sext_ln128_fu_630_p1;
wire   [15:0] grp_fu_677_p3;
(* use_dsp48 = "no" *) wire   [15:0] Sum_fu_633_p2;
wire   [7:0] grp_fu_677_p0;
wire   [7:0] grp_fu_677_p1;
wire   [15:0] grp_fu_677_p2;
reg    grp_fu_677_ce;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [14:0] grp_fu_677_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
end

Filter_HW_Filter_vertical_HW_1_Input_local_0 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_0_address0),
    .ce0(Input_local_0_ce0),
    .we0(Input_local_0_we0),
    .d0(Input_local_0_d0),
    .q0(Input_local_0_q0)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_1_address0),
    .ce0(Input_local_1_ce0),
    .we0(Input_local_1_we0),
    .d0(Input_local_1_d0),
    .q0(Input_local_1_q0),
    .address1(Input_local_1_address1),
    .ce1(Input_local_1_ce1),
    .q1(Input_local_1_q1)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_2_address0),
    .ce0(Input_local_2_ce0),
    .we0(Input_local_2_we0),
    .d0(Input_local_2_d0),
    .q0(Input_local_2_q0),
    .address1(Input_local_2_address1),
    .ce1(Input_local_2_ce1),
    .q1(Input_local_2_q1)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_3_address0),
    .ce0(Input_local_3_ce0),
    .we0(Input_local_3_we0),
    .d0(Input_local_3_d0),
    .q0(Input_local_3_q0),
    .address1(Input_local_3_address1),
    .ce1(Input_local_3_ce1),
    .q1(Input_local_3_q1)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_4_address0),
    .ce0(Input_local_4_ce0),
    .we0(Input_local_4_we0),
    .d0(Input_local_4_d0),
    .q0(Input_local_4_q0),
    .address1(Input_local_4_address1),
    .ce1(Input_local_4_ce1),
    .q1(Input_local_4_q1)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_5_address0),
    .ce0(Input_local_5_ce0),
    .we0(Input_local_5_we0),
    .d0(Input_local_5_d0),
    .q0(Input_local_5_q0),
    .address1(Input_local_5_address1),
    .ce1(Input_local_5_ce1),
    .q1(Input_local_5_q1)
);

Filter_HW_Filter_vertical_HW_1_Input_local_1 #(
    .DataWidth( 8 ),
    .AddressRange( 474 ),
    .AddressWidth( 9 ))
Input_local_6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Input_local_6_address0),
    .ce0(Input_local_6_ce0),
    .we0(Input_local_6_we0),
    .d0(tempStream_dout),
    .q0(Input_local_6_q0),
    .address1(Input_local_6_address1),
    .ce1(Input_local_6_ce1),
    .q1(Input_local_6_q1)
);

Filter_HW_mac_muladd_8ns_8ns_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8ns_8ns_16ns_16_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_677_p0),
    .din1(grp_fu_677_p1),
    .din2(grp_fu_677_p2),
    .ce(grp_fu_677_ce),
    .dout(grp_fu_677_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln133_fu_649_p2 == 1'd1) | (icmp_ln119_reg_710 == 1'd1)))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln119_fu_481_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state6)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln119_fu_481_p2 == 1'd0))) begin
            ap_enable_reg_pp1_iter4 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b1 == ap_condition_pp2_exit_iter0_state12))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln133_fu_649_p2 == 1'd0) & (icmp_ln119_reg_710 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state12))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln133_fu_649_p2 == 1'd0) & (icmp_ln119_reg_710 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln120_fu_499_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        X_reg_403 <= add_ln120_fu_493_p2;
    end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln119_fu_481_p2 == 1'd0))) begin
        X_reg_403 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        Y_reg_391 <= 9'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Y_reg_391 <= Y_1_reg_714;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln133_fu_649_p2 == 1'd0) & (icmp_ln119_reg_710 == 1'd0))) begin
        i_1_reg_414 <= 9'd0;
    end else if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln134_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        i_1_reg_414 <= add_ln134_fu_655_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln113_fu_431_p2 == 1'd0))) begin
        i_reg_380 <= add_ln114_fu_465_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_380 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln113_fu_431_p2 == 1'd0))) begin
        indvar_flatten_reg_358 <= add_ln113_fu_425_p2;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_358 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_reg_691 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        j_reg_369 <= select_ln113_reg_700;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        j_reg_369 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln134_fu_661_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_1_addr_2_reg_806 <= zext_ln134_fu_667_p1;
        Input_local_2_addr_2_reg_812 <= zext_ln134_fu_667_p1;
        Input_local_3_addr_2_reg_818 <= zext_ln134_fu_667_p1;
        Input_local_4_addr_2_reg_824 <= zext_ln134_fu_667_p1;
        Input_local_5_addr_2_reg_830 <= zext_ln134_fu_667_p1;
        Input_local_6_addr_2_reg_836 <= zext_ln134_fu_667_p1;
        zext_ln134_reg_801[8 : 0] <= zext_ln134_fu_667_p1[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        Y_1_reg_714 <= Y_1_fu_487_p2;
        icmp_ln119_reg_710 <= icmp_ln119_fu_481_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (icmp_ln120_reg_724_pp1_iter2_reg == 1'd0))) begin
        add_ln128_1_reg_783 <= add_ln128_1_fu_624_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln113_reg_691 <= icmp_ln113_fu_431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln120_reg_724 <= icmp_ln120_fu_499_p2;
        icmp_ln120_reg_724_pp1_iter1_reg <= icmp_ln120_reg_724;
        zext_ln120_reg_728_pp1_iter1_reg[8 : 0] <= zext_ln120_reg_728[8 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        icmp_ln120_reg_724_pp1_iter2_reg <= icmp_ln120_reg_724_pp1_iter1_reg;
        icmp_ln120_reg_724_pp1_iter3_reg <= icmp_ln120_reg_724_pp1_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln134_reg_797 <= icmp_ln134_fu_661_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln113_fu_431_p2 == 1'd0))) begin
        select_ln103_reg_695 <= select_ln103_fu_443_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln113_fu_431_p2 == 1'd0))) begin
        select_ln113_reg_700 <= select_ln113_fu_457_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln120_fu_499_p2 == 1'd0))) begin
        zext_ln120_reg_728[8 : 0] <= zext_ln120_fu_505_p1[8 : 0];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_0_address0 = zext_ln134_reg_801;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_0_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_0_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_0_ce0 = 1'b1;
    end else begin
        Input_local_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_0_d0 = Input_local_1_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_0_d0 = tempStream_dout;
    end else begin
        Input_local_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd0)))) begin
        Input_local_0_we0 = 1'b1;
    end else begin
        Input_local_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_1_address0 = Input_local_1_addr_2_reg_806;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_1_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_1_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_1_ce0 = 1'b1;
    end else begin
        Input_local_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_1_ce1 = 1'b1;
    end else begin
        Input_local_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_1_d0 = Input_local_2_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_1_d0 = tempStream_dout;
    end else begin
        Input_local_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd1)))) begin
        Input_local_1_we0 = 1'b1;
    end else begin
        Input_local_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_2_address0 = Input_local_2_addr_2_reg_812;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_2_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_2_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_2_ce0 = 1'b1;
    end else begin
        Input_local_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_2_ce1 = 1'b1;
    end else begin
        Input_local_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_2_d0 = Input_local_3_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_2_d0 = tempStream_dout;
    end else begin
        Input_local_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd2)))) begin
        Input_local_2_we0 = 1'b1;
    end else begin
        Input_local_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_3_address0 = Input_local_3_addr_2_reg_818;
    end else if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        Input_local_3_address0 = zext_ln120_fu_505_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_3_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_3_ce0 = 1'b1;
    end else begin
        Input_local_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_3_ce1 = 1'b1;
    end else begin
        Input_local_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_3_d0 = Input_local_4_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_3_d0 = tempStream_dout;
    end else begin
        Input_local_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd3)))) begin
        Input_local_3_we0 = 1'b1;
    end else begin
        Input_local_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_4_address0 = Input_local_4_addr_2_reg_824;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_4_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_4_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_4_ce0 = 1'b1;
    end else begin
        Input_local_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_4_ce1 = 1'b1;
    end else begin
        Input_local_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_4_d0 = Input_local_5_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_4_d0 = tempStream_dout;
    end else begin
        Input_local_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd4)))) begin
        Input_local_4_we0 = 1'b1;
    end else begin
        Input_local_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_5_address0 = Input_local_5_addr_2_reg_830;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_5_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_5_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_5_ce0 = 1'b1;
    end else begin
        Input_local_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_5_ce1 = 1'b1;
    end else begin
        Input_local_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_5_d0 = Input_local_6_q1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_5_d0 = tempStream_dout;
    end else begin
        Input_local_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (select_ln113_reg_700 == 3'd5)))) begin
        Input_local_5_we0 = 1'b1;
    end else begin
        Input_local_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        Input_local_6_address0 = Input_local_6_addr_2_reg_836;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        Input_local_6_address0 = zext_ln120_reg_728_pp1_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Input_local_6_address0 = i_cast_i_fu_471_p1;
    end else begin
        Input_local_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        Input_local_6_ce0 = 1'b1;
    end else begin
        Input_local_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        Input_local_6_ce1 = 1'b1;
    end else begin
        Input_local_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((select_ln113_reg_700 == 3'd6) | (select_ln113_reg_700 == 3'd7))))) begin
        Input_local_6_we0 = 1'b1;
    end else begin
        Input_local_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln113_fu_431_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln120_fu_499_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln134_fu_661_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln133_fu_649_p2 == 1'd1) | (icmp_ln119_reg_710 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln113_reg_691 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_j_phi_fu_373_p4 = select_ln113_reg_700;
    end else begin
        ap_phi_mux_j_phi_fu_373_p4 = j_reg_369;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln133_fu_649_p2 == 1'd1) | (icmp_ln119_reg_710 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_677_ce = 1'b1;
    end else begin
        grp_fu_677_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0))) begin
        outStream_blk_n = outStream_full_n;
    end else begin
        outStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        outStream_write = 1'b1;
    end else begin
        outStream_write = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln113_reg_691 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tempStream_blk_n = tempStream_empty_n;
    end else begin
        tempStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0)) | ((icmp_ln113_reg_691 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        tempStream_read = 1'b1;
    end else begin
        tempStream_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln113_fu_431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln113_fu_431_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln119_fu_481_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln120_fu_499_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter4 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter3 == 1'b0)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (icmp_ln120_fu_499_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln133_fu_649_p2 == 1'd1) | (icmp_ln119_reg_710 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln134_fu_661_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage0_subdone) & (icmp_ln134_fu_661_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Input_local_0_load_cast_i_fu_598_p1 = Input_local_0_q0;

assign Input_local_1_address1 = zext_ln134_fu_667_p1;

assign Input_local_2_address1 = zext_ln134_fu_667_p1;

assign Input_local_3_address1 = zext_ln134_fu_667_p1;

assign Input_local_4_address1 = zext_ln134_fu_667_p1;

assign Input_local_5_address1 = zext_ln134_fu_667_p1;

assign Input_local_6_address1 = zext_ln134_fu_667_p1;

assign Input_local_6_load_cast_i_fu_602_p1 = Input_local_6_q0;

assign Sum_fu_633_p2 = ($signed(sext_ln128_fu_630_p1) + $signed(grp_fu_677_p3));

assign Y_1_fu_487_p2 = (Y_reg_391 + 9'd1);

assign add_ln113_1_fu_451_p2 = (ap_phi_mux_j_phi_fu_373_p4 + 3'd1);

assign add_ln113_fu_425_p2 = (indvar_flatten_reg_358 + 12'd1);

assign add_ln114_fu_465_p2 = (select_ln103_fu_443_p3 + 9'd1);

assign add_ln120_fu_493_p2 = (X_reg_403 + 9'd1);

assign add_ln128_1_fu_624_p2 = ($signed(tmp3_i_cast_fu_594_p1) + $signed(zext_ln128_4_fu_620_p1));

assign add_ln134_fu_655_p2 = (i_1_reg_414 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln113_reg_691 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tempStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln113_reg_691 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (tempStream_empty_n == 1'b0));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_01001 = ((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (outStream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (outStream_full_n == 1'b0));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (ap_enable_reg_pp1_iter4 == 1'b1) & (outStream_full_n == 1'b0));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_11001 = ((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (tempStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = ((icmp_ln134_reg_797 == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (tempStream_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp1_stage0_iter4 = ((icmp_ln120_reg_724_pp1_iter3_reg == 1'd0) & (outStream_full_n == 1'b0));
end

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_pp2_stage0_iter1 = ((icmp_ln134_reg_797 == 1'd0) & (tempStream_empty_n == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = ((icmp_ln113_reg_691 == 1'd0) & (tempStream_empty_n == 1'b0));
end

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign grp_fu_677_p0 = grp_fu_677_p00;

assign grp_fu_677_p00 = Input_local_3_q0;

assign grp_fu_677_p1 = 15'd98;

assign grp_fu_677_p2 = (p_shl3_cast_i_fu_544_p1 - p_shl4_cast_i_fu_556_p1);

assign i_cast_i_fu_471_p1 = select_ln103_reg_695;

assign icmp_ln113_fu_431_p2 = ((indvar_flatten_reg_358 == 12'd3318) ? 1'b1 : 1'b0);

assign icmp_ln114_fu_437_p2 = ((i_reg_380 == 9'd474) ? 1'b1 : 1'b0);

assign icmp_ln119_fu_481_p2 = ((Y_reg_391 == 9'd264) ? 1'b1 : 1'b0);

assign icmp_ln120_fu_499_p2 = ((X_reg_403 == 9'd474) ? 1'b1 : 1'b0);

assign icmp_ln133_fu_649_p2 = ((Y_reg_391 == 9'd263) ? 1'b1 : 1'b0);

assign icmp_ln134_fu_661_p2 = ((i_1_reg_414 == 9'd474) ? 1'b1 : 1'b0);

assign outStream_din = {{Sum_fu_633_p2[15:8]}};

assign p_shl3_cast_i_fu_544_p1 = p_shl3_i_fu_536_p3;

assign p_shl3_i_fu_536_p3 = {{tmp_i_fu_530_p2}, {6'd0}};

assign p_shl4_cast_i_fu_556_p1 = p_shl4_i_fu_548_p3;

assign p_shl4_i_fu_548_p3 = {{tmp_i_fu_530_p2}, {1'd0}};

assign p_shl_cast_i_fu_584_p1 = p_shl_i_fu_576_p3;

assign p_shl_i_fu_576_p3 = {{tmp2_i_fu_566_p2}, {4'd0}};

assign select_ln103_fu_443_p3 = ((icmp_ln114_fu_437_p2[0:0] == 1'b1) ? 9'd0 : i_reg_380);

assign select_ln113_fu_457_p3 = ((icmp_ln114_fu_437_p2[0:0] == 1'b1) ? add_ln113_1_fu_451_p2 : ap_phi_mux_j_phi_fu_373_p4);

assign sext_ln128_fu_630_p1 = $signed(add_ln128_1_reg_783);

assign tmp2_cast125_i_fu_572_p1 = tmp2_i_fu_566_p2;

assign tmp2_i_fu_566_p2 = (zext_ln123_1_fu_526_p1 + zext_ln128_fu_514_p1);

assign tmp3_i_cast_fu_594_p1 = $signed(tmp3_i_fu_588_p2);

assign tmp3_i_fu_588_p2 = (p_shl_cast_i_fu_584_p1 - tmp2_cast125_i_fu_572_p1);

assign tmp41_i_fu_606_p2 = (Input_local_6_load_cast_i_fu_602_p1 + Input_local_0_load_cast_i_fu_598_p1);

assign tmp5_i_fu_612_p3 = {{tmp41_i_fu_606_p2}, {1'd0}};

assign tmp_i_fu_530_p2 = (zext_ln123_fu_522_p1 + zext_ln128_1_fu_518_p1);

assign zext_ln120_fu_505_p1 = X_reg_403;

assign zext_ln123_1_fu_526_p1 = Input_local_5_q0;

assign zext_ln123_fu_522_p1 = Input_local_4_q0;

assign zext_ln128_1_fu_518_p1 = Input_local_2_q0;

assign zext_ln128_4_fu_620_p1 = tmp5_i_fu_612_p3;

assign zext_ln128_fu_514_p1 = Input_local_1_q0;

assign zext_ln134_fu_667_p1 = i_1_reg_414;

always @ (posedge ap_clk) begin
    zext_ln120_reg_728[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln120_reg_728_pp1_iter1_reg[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln134_reg_801[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //Filter_HW_Filter_vertical_HW_1
